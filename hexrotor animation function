function animate_hexrotor(Xsim, dt)
    vis = mc.Visualizer()
    #robot_obj = mc.MeshFileGeometry(joinpath(@__DIR__,"hexrotor_assembly_notilt.obj"))
    robot_obj = mc.MeshFileGeometry(joinpath(@__DIR__,"quadrotor.obj"))

    mc.setobject!(vis[:drone], robot_obj)

    mc.setobject!(vis[:drone][:base], robot_obj, mc.MeshPhongMaterial(color=mc.RGBA(0.6, 0.6, 1.0, 1.0)))
    mc.settransform!(vis[:drone][:base], mc.Translation([0,0,0]) âˆ˜ mc.LinearMap(0.001 * I))

    # vis_traj!(vis, :traj, Xref[1:85]; R = 0.01, color = mc.RGBA(1.0, 0.0, 0.0, 1.0))
    # target = mc.HyperSphere(mc.Point(0,0,0.0),0.1)
    # mc.setobject!(vis[:target], target, mc.MeshPhongMaterial(color = mc.RGBA(0.0,1.0,0.0,0.4)))


    anim = mc.Animation(floor(Int,1/dt))
    for k = 1:length(Xsim)
        mc.atframe(anim, k) do
            r = Xsim[k][1:3]
            p = Xsim[k][7:9]
            mc.settransform!(vis[:drone], mc.compose(mc.Translation(r),mc.LinearMap(1.5*(dcm_from_mrp(p)))))
            #mc.settransform!(vis[:target], mc.Translation(Xref[k][1:3]))
        end
    end
    mc.setanimation!(vis, anim)

    return (mc.render(vis))
end